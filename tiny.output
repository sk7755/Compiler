Terminals unused in grammar

   ERROR
   COMERR
   ASSIGN


State 55 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 $@1: %empty

    7 var_declaration: type_specifier ID $@1 SEMI

    8 $@2: %empty

    9 var_declaration: type_specifier ID $@2 LSB NUM RSB SEMI

   10 type_specifier: INT
   11               | VOID

   12 $@3: %empty

   13 fun_declaration: type_specifier ID $@3 LPAREN params RPAREN compound_stmt

   14 params: param_list
   15       | VOID

   16 param_list: param_list COMMA param
   17           | param

   18 param: type_specifier ID

   19 $@4: %empty

   20 param: type_specifier ID $@4 LSB RSB

   21 compound_stmt: LCB local_declarations statement_list RCB

   22 local_declarations: local_declarations var_declaration
   23                   | %empty

   24 statement_list: statement_list statement
   25               | %empty

   26 statement: expression_stmt
   27          | compound_stmt
   28          | selection_stmt
   29          | iteration_stmt
   30          | return_stmt

   31 expression_stmt: expression SEMI
   32                | SEMI

   33 selection_stmt: IF LPAREN expression RPAREN statement
   34               | IF LPAREN expression RPAREN statement ELSE statement

   35 iteration_stmt: WHILE LPAREN expression RPAREN statement

   36 return_stmt: RETURN SEMI
   37            | RETURN expression SEMI

   38 expression: var EQ expression
   39           | simple_expression

   40 var: ID

   41 $@5: %empty

   42 var: ID $@5 LSB expression RSB

   43 simple_expression: additive_expression relop additive_expression
   44                  | additive_expression

   45 relop: LEQ
   46      | LT
   47      | GT
   48      | GEQ
   49      | EQ
   50      | NEQ

   51 additive_expression: additive_expression addop term
   52                    | term

   53 addop: PLUS
   54      | MINUS

   55 term: term mulop factor
   56     | factor

   57 mulop: TIMES
   58      | DIVIDE

   59 factor: LPAREN expression RPAREN
   60       | var
   61       | call
   62       | NUM

   63 $@6: %empty

   64 call: ID $@6 LPAREN args RPAREN

   65 args: arg_list
   66     | %empty

   67 arg_list: arg_list COMMA expression
   68         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
ERROR (258)
COMERR (259)
IF (260) 33 34
ELSE (261) 34
INT (262) 10
RETURN (263) 36 37
VOID (264) 11 15
WHILE (265) 35
ID (266) 7 9 13 18 20 40 42 64
NUM (267) 9 62
ASSIGN (268)
EQ (269) 38 49
NEQ (270) 50
LT (271) 46
LEQ (272) 45
GT (273) 47
GEQ (274) 48
PLUS (275) 53
MINUS (276) 54
TIMES (277) 57
DIVIDE (278) 58
LPAREN (279) 13 33 34 35 59 64
RPAREN (280) 13 33 34 35 59 64
LCB (281) 21
RCB (282) 21
LSB (283) 9 20 42
RSB (284) 9 20 42
COMMA (285) 16 67
SEMI (286) 7 9 31 32 36 37


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
declaration_list (34)
    on left: 2 3, on right: 1 2
declaration (35)
    on left: 4 5, on right: 2 3
var_declaration (36)
    on left: 7 9, on right: 4 22
$@1 (37)
    on left: 6, on right: 7
$@2 (38)
    on left: 8, on right: 9
type_specifier (39)
    on left: 10 11, on right: 7 9 13 18 20
fun_declaration (40)
    on left: 13, on right: 5
$@3 (41)
    on left: 12, on right: 13
params (42)
    on left: 14 15, on right: 13
param_list (43)
    on left: 16 17, on right: 14 16
param (44)
    on left: 18 20, on right: 16 17
$@4 (45)
    on left: 19, on right: 20
compound_stmt (46)
    on left: 21, on right: 13 27
local_declarations (47)
    on left: 22 23, on right: 21 22
statement_list (48)
    on left: 24 25, on right: 21 24
statement (49)
    on left: 26 27 28 29 30, on right: 24 33 34 35
expression_stmt (50)
    on left: 31 32, on right: 26
selection_stmt (51)
    on left: 33 34, on right: 28
iteration_stmt (52)
    on left: 35, on right: 29
return_stmt (53)
    on left: 36 37, on right: 30
expression (54)
    on left: 38 39, on right: 31 33 34 35 37 38 42 59 67 68
var (55)
    on left: 40 42, on right: 38 60
$@5 (56)
    on left: 41, on right: 42
simple_expression (57)
    on left: 43 44, on right: 39
relop (58)
    on left: 45 46 47 48 49 50, on right: 43
additive_expression (59)
    on left: 51 52, on right: 43 44 51
addop (60)
    on left: 53 54, on right: 51
term (61)
    on left: 55 56, on right: 51 52 55
mulop (62)
    on left: 57 58, on right: 55
factor (63)
    on left: 59 60 61 62, on right: 55 56
call (64)
    on left: 64, on right: 61
$@6 (65)
    on left: 63, on right: 64
args (66)
    on left: 65 66, on right: 64
arg_list (67)
    on left: 67 68, on right: 65 67


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

   10 type_specifier: INT .

    $default  reduce using rule 10 (type_specifier)


State 2

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    7 var_declaration: type_specifier . ID $@1 SEMI
    9                | type_specifier . ID $@2 LSB NUM RSB SEMI
   13 fun_declaration: type_specifier . ID $@3 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11


State 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 11

    7 var_declaration: type_specifier ID . $@1 SEMI
    9                | type_specifier ID . $@2 LSB NUM RSB SEMI
   13 fun_declaration: type_specifier ID . $@3 LPAREN params RPAREN compound_stmt

    LPAREN    reduce using rule 12 ($@3)
    LSB       reduce using rule 8 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 12
    $@2  go to state 13
    $@3  go to state 14


State 12

    7 var_declaration: type_specifier ID $@1 . SEMI

    SEMI  shift, and go to state 15


State 13

    9 var_declaration: type_specifier ID $@2 . LSB NUM RSB SEMI

    LSB  shift, and go to state 16


State 14

   13 fun_declaration: type_specifier ID $@3 . LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 17


State 15

    7 var_declaration: type_specifier ID $@1 SEMI .

    $default  reduce using rule 7 (var_declaration)


State 16

    9 var_declaration: type_specifier ID $@2 LSB . NUM RSB SEMI

    NUM  shift, and go to state 18


State 17

   13 fun_declaration: type_specifier ID $@3 LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 19

    type_specifier  go to state 20
    params          go to state 21
    param_list      go to state 22
    param           go to state 23


State 18

    9 var_declaration: type_specifier ID $@2 LSB NUM . RSB SEMI

    RSB  shift, and go to state 24


State 19

   11 type_specifier: VOID .
   15 params: VOID .

    RPAREN    reduce using rule 15 (params)
    $default  reduce using rule 11 (type_specifier)


State 20

   18 param: type_specifier . ID
   20      | type_specifier . ID $@4 LSB RSB

    ID  shift, and go to state 25


State 21

   13 fun_declaration: type_specifier ID $@3 LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 26


State 22

   14 params: param_list .
   16 param_list: param_list . COMMA param

    COMMA  shift, and go to state 27

    $default  reduce using rule 14 (params)


State 23

   17 param_list: param .

    $default  reduce using rule 17 (param_list)


State 24

    9 var_declaration: type_specifier ID $@2 LSB NUM RSB . SEMI

    SEMI  shift, and go to state 28


State 25

   18 param: type_specifier ID .
   20      | type_specifier ID . $@4 LSB RSB

    LSB       reduce using rule 19 ($@4)
    $default  reduce using rule 18 (param)

    $@4  go to state 29


State 26

   13 fun_declaration: type_specifier ID $@3 LPAREN params RPAREN . compound_stmt

    LCB  shift, and go to state 30

    compound_stmt  go to state 31


State 27

   16 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 20
    param           go to state 32


State 28

    9 var_declaration: type_specifier ID $@2 LSB NUM RSB SEMI .

    $default  reduce using rule 9 (var_declaration)


State 29

   20 param: type_specifier ID $@4 . LSB RSB

    LSB  shift, and go to state 33


State 30

   21 compound_stmt: LCB . local_declarations statement_list RCB

    $default  reduce using rule 23 (local_declarations)

    local_declarations  go to state 34


State 31

   13 fun_declaration: type_specifier ID $@3 LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 13 (fun_declaration)


State 32

   16 param_list: param_list COMMA param .

    $default  reduce using rule 16 (param_list)


State 33

   20 param: type_specifier ID $@4 LSB . RSB

    RSB  shift, and go to state 35


State 34

   21 compound_stmt: LCB local_declarations . statement_list RCB
   22 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 25 (statement_list)

    var_declaration  go to state 36
    type_specifier   go to state 37
    statement_list   go to state 38


State 35

   20 param: type_specifier ID $@4 LSB RSB .

    $default  reduce using rule 20 (param)


State 36

   22 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 22 (local_declarations)


State 37

    7 var_declaration: type_specifier . ID $@1 SEMI
    9                | type_specifier . ID $@2 LSB NUM RSB SEMI

    ID  shift, and go to state 39


State 38

   21 compound_stmt: LCB local_declarations statement_list . RCB
   24 statement_list: statement_list . statement

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45
    LCB     shift, and go to state 30
    RCB     shift, and go to state 46
    SEMI    shift, and go to state 47

    compound_stmt        go to state 48
    statement            go to state 49
    expression_stmt      go to state 50
    selection_stmt       go to state 51
    iteration_stmt       go to state 52
    return_stmt          go to state 53
    expression           go to state 54
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


State 39

    7 var_declaration: type_specifier ID . $@1 SEMI
    9                | type_specifier ID . $@2 LSB NUM RSB SEMI

    LSB       reduce using rule 8 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 12
    $@2  go to state 13


State 40

   33 selection_stmt: IF . LPAREN expression RPAREN statement
   34               | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 61


State 41

   36 return_stmt: RETURN . SEMI
   37            | RETURN . expression SEMI

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45
    SEMI    shift, and go to state 62

    expression           go to state 63
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


State 42

   35 iteration_stmt: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 64


State 43

   40 var: ID .
   42    | ID . $@5 LSB expression RSB
   64 call: ID . $@6 LPAREN args RPAREN

    LPAREN    reduce using rule 63 ($@6)
    LSB       reduce using rule 41 ($@5)
    $default  reduce using rule 40 (var)

    $@5  go to state 65
    $@6  go to state 66


State 44

   62 factor: NUM .

    $default  reduce using rule 62 (factor)


State 45

   59 factor: LPAREN . expression RPAREN

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    expression           go to state 67
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


State 46

   21 compound_stmt: LCB local_declarations statement_list RCB .

    $default  reduce using rule 21 (compound_stmt)


State 47

   32 expression_stmt: SEMI .

    $default  reduce using rule 32 (expression_stmt)


State 48

   27 statement: compound_stmt .

    $default  reduce using rule 27 (statement)


State 49

   24 statement_list: statement_list statement .

    $default  reduce using rule 24 (statement_list)


State 50

   26 statement: expression_stmt .

    $default  reduce using rule 26 (statement)


State 51

   28 statement: selection_stmt .

    $default  reduce using rule 28 (statement)


State 52

   29 statement: iteration_stmt .

    $default  reduce using rule 29 (statement)


State 53

   30 statement: return_stmt .

    $default  reduce using rule 30 (statement)


State 54

   31 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 68


State 55

   38 expression: var . EQ expression
   60 factor: var .

    EQ  shift, and go to state 69

    EQ        [reduce using rule 60 (factor)]
    $default  reduce using rule 60 (factor)


State 56

   39 expression: simple_expression .

    $default  reduce using rule 39 (expression)


State 57

   43 simple_expression: additive_expression . relop additive_expression
   44                  | additive_expression .
   51 additive_expression: additive_expression . addop term

    EQ     shift, and go to state 70
    NEQ    shift, and go to state 71
    LT     shift, and go to state 72
    LEQ    shift, and go to state 73
    GT     shift, and go to state 74
    GEQ    shift, and go to state 75
    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 44 (simple_expression)

    relop  go to state 78
    addop  go to state 79


State 58

   52 additive_expression: term .
   55 term: term . mulop factor

    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81

    $default  reduce using rule 52 (additive_expression)

    mulop  go to state 82


State 59

   56 term: factor .

    $default  reduce using rule 56 (term)


State 60

   61 factor: call .

    $default  reduce using rule 61 (factor)


State 61

   33 selection_stmt: IF LPAREN . expression RPAREN statement
   34               | IF LPAREN . expression RPAREN statement ELSE statement

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    expression           go to state 83
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


State 62

   36 return_stmt: RETURN SEMI .

    $default  reduce using rule 36 (return_stmt)


State 63

   37 return_stmt: RETURN expression . SEMI

    SEMI  shift, and go to state 84


State 64

   35 iteration_stmt: WHILE LPAREN . expression RPAREN statement

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    expression           go to state 85
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


State 65

   42 var: ID $@5 . LSB expression RSB

    LSB  shift, and go to state 86


State 66

   64 call: ID $@6 . LPAREN args RPAREN

    LPAREN  shift, and go to state 87


State 67

   59 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 88


State 68

   31 expression_stmt: expression SEMI .

    $default  reduce using rule 31 (expression_stmt)


State 69

   38 expression: var EQ . expression

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    expression           go to state 89
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


State 70

   49 relop: EQ .

    $default  reduce using rule 49 (relop)


State 71

   50 relop: NEQ .

    $default  reduce using rule 50 (relop)


State 72

   46 relop: LT .

    $default  reduce using rule 46 (relop)


State 73

   45 relop: LEQ .

    $default  reduce using rule 45 (relop)


State 74

   47 relop: GT .

    $default  reduce using rule 47 (relop)


State 75

   48 relop: GEQ .

    $default  reduce using rule 48 (relop)


State 76

   53 addop: PLUS .

    $default  reduce using rule 53 (addop)


State 77

   54 addop: MINUS .

    $default  reduce using rule 54 (addop)


State 78

   43 simple_expression: additive_expression relop . additive_expression

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var                  go to state 90
    additive_expression  go to state 91
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


State 79

   51 additive_expression: additive_expression addop . term

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var     go to state 90
    term    go to state 92
    factor  go to state 59
    call    go to state 60


State 80

   57 mulop: TIMES .

    $default  reduce using rule 57 (mulop)


State 81

   58 mulop: DIVIDE .

    $default  reduce using rule 58 (mulop)


State 82

   55 term: term mulop . factor

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    var     go to state 90
    factor  go to state 93
    call    go to state 60


State 83

   33 selection_stmt: IF LPAREN expression . RPAREN statement
   34               | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 94


State 84

   37 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 37 (return_stmt)


State 85

   35 iteration_stmt: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 95


State 86

   42 var: ID $@5 LSB . expression RSB

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    expression           go to state 96
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


State 87

   64 call: ID $@6 LPAREN . args RPAREN

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    $default  reduce using rule 66 (args)

    expression           go to state 97
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60
    args                 go to state 98
    arg_list             go to state 99


State 88

   59 factor: LPAREN expression RPAREN .

    $default  reduce using rule 59 (factor)


State 89

   38 expression: var EQ expression .

    $default  reduce using rule 38 (expression)


State 90

   60 factor: var .

    $default  reduce using rule 60 (factor)


State 91

   43 simple_expression: additive_expression relop additive_expression .
   51 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 43 (simple_expression)

    addop  go to state 79


State 92

   51 additive_expression: additive_expression addop term .
   55 term: term . mulop factor

    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81

    $default  reduce using rule 51 (additive_expression)

    mulop  go to state 82


State 93

   55 term: term mulop factor .

    $default  reduce using rule 55 (term)


State 94

   33 selection_stmt: IF LPAREN expression RPAREN . statement
   34               | IF LPAREN expression RPAREN . statement ELSE statement

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45
    LCB     shift, and go to state 30
    SEMI    shift, and go to state 47

    compound_stmt        go to state 48
    statement            go to state 100
    expression_stmt      go to state 50
    selection_stmt       go to state 51
    iteration_stmt       go to state 52
    return_stmt          go to state 53
    expression           go to state 54
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


State 95

   35 iteration_stmt: WHILE LPAREN expression RPAREN . statement

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45
    LCB     shift, and go to state 30
    SEMI    shift, and go to state 47

    compound_stmt        go to state 48
    statement            go to state 101
    expression_stmt      go to state 50
    selection_stmt       go to state 51
    iteration_stmt       go to state 52
    return_stmt          go to state 53
    expression           go to state 54
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


State 96

   42 var: ID $@5 LSB expression . RSB

    RSB  shift, and go to state 102


State 97

   68 arg_list: expression .

    $default  reduce using rule 68 (arg_list)


State 98

   64 call: ID $@6 LPAREN args . RPAREN

    RPAREN  shift, and go to state 103


State 99

   65 args: arg_list .
   67 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 104

    $default  reduce using rule 65 (args)


State 100

   33 selection_stmt: IF LPAREN expression RPAREN statement .
   34               | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 105

    ELSE      [reduce using rule 33 (selection_stmt)]
    $default  reduce using rule 33 (selection_stmt)


State 101

   35 iteration_stmt: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 35 (iteration_stmt)


State 102

   42 var: ID $@5 LSB expression RSB .

    $default  reduce using rule 42 (var)


State 103

   64 call: ID $@6 LPAREN args RPAREN .

    $default  reduce using rule 64 (call)


State 104

   67 arg_list: arg_list COMMA . expression

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45

    expression           go to state 106
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


State 105

   34 selection_stmt: IF LPAREN expression RPAREN statement ELSE . statement

    IF      shift, and go to state 40
    RETURN  shift, and go to state 41
    WHILE   shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 45
    LCB     shift, and go to state 30
    SEMI    shift, and go to state 47

    compound_stmt        go to state 48
    statement            go to state 107
    expression_stmt      go to state 50
    selection_stmt       go to state 51
    iteration_stmt       go to state 52
    return_stmt          go to state 53
    expression           go to state 54
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


State 106

   67 arg_list: arg_list COMMA expression .

    $default  reduce using rule 67 (arg_list)


State 107

   34 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 34 (selection_stmt)
